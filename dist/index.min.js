"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Cache=void 0;const flat_1=__importDefault(require("flat"));class Cache{#key;#limit;#data;#useCount;constructor(e,t){if("string"!=typeof e)throw new Error("Key must be a string");if(""===e.trim())throw new Error("Key cannot be empty");if(t){if(!Number.isInteger(t)||t<1)throw new Error("Limit must be integer and greater than 1");this.#limit=t,this.#useCount=new Map}this.#data=new Map,this.#key=e}get key(){return this.#key}get size(){return this.#data.size}get limit(){return this.#limit}set limit(e){if(!Number.isInteger(e)||e<1)throw new Error("Limit must be integer and greater than 1");if(e<this.size)throw new Error("New limit value must greater than cache size");this.#limit=e}set(e,t){if("object"!=typeof e)throw new Error("item must be an object");if(!Object.hasOwn(e,this.#key))throw new Error("item must contain key: "+this.#key);if(!this.#isValidValue(e[this.#key]))throw new Error("value must be a number, string or bigint");if(t){if(!this.#isValidNumber(t))throw new Error("expiryTime must me a number and greater than 0");setTimeout(()=>{this.remove(e[this.#key])},t)}this.#limit&&this.size===this.#limit&&this.#removeLeastUse(),this.#data.set(e[this.#key],e),this.#limit&&this.#useCount.set(e[this.#key],0)}get(e){return this.#limit&&this.#data.has(e)&&this.#useCount.set(e,this.#useCount.get(e)+1),this.#data.get(e)}has(e){return this.#data.has(e)}remove(e){this.#limit&&this.#data.has(e)&&this.#useCount.delete(e),this.#data.has(e)&&this.#data.delete(e)}clear(){this.#limit&&this.#useCount.clear(),this.#data.clear()}findKey(t){var i=this.#data.values();let r=void 0;var s=this.size;for(let e=0;e<s;e++){var a=i.next();if(t(a.value)){r=a.value[this.#key];break}}return r}filter(t){var i=this.#data.values(),r=[],s=this.size;for(let e=0;e<s;e++){var a=i.next();t(a.value)&&r.push(a.value)}return r}toObject(){return Object.fromEntries(this.#data)}toArray(){return Array.from(this.#data).map(e=>e[1])}toJSONArray(){return JSON.stringify(this.toArray())}toJSONObject(){return JSON.stringify(this.toObject())}search(i){if(""!==i.searchValue.trim()){i.nocase&&(i.searchValue=i.searchValue.toLocaleLowerCase());var t=[],r=this.#data.values(),s=this.size;for(let e=0;e<s;e++){var a,u,h=r.next();i.deepScan?(a=(0,flat_1.default)(h.value),u=Object.keys(a).filter(t=>i.searchFields.some(e=>t.includes(e))),this.#isMatchValue(i.searchValue,a,u,i.nocase)&&t.push(h.value)):(a=h.value,u=Object.keys(a).filter(e=>i.searchFields.includes(e)),this.#isMatchValue(i.searchValue,a,u,i.nocase)&&t.push(h.value))}return t}}#findLeastUse(){var t=this.#useCount.entries();let i=void 0,r=1/0;for(let e=0;e<this.size;e++){var s=t.next();s.value[1]<r&&(r=s.value[1],i=s.value[0])}return i}#removeLeastUse(){var e=this.#findLeastUse();this.#data.delete(e),this.#useCount.delete(e)}#isValidNumber(e){return"number"==typeof e&&!(e<=0)}#isMatchValue(t,i,r,s){var a=[String(null),String(void 0)];for(let e=0;e<r.length;e++){var u=String(i[r[e]]);if(!a.includes(u))if(s){if(u.toLocaleLowerCase().includes(t))return!0}else if(u.includes(t))return!0}return!1}#isValidValue(e){return["string","number","bigint"].includes(typeof e)}}exports.Cache=Cache;